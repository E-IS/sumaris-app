/* You can add global styles to this file, and also import other style files */
@import "core";

body,
html {
  padding: 0;
  margin: 0;
}

body {
  user-select: text !important;
}

* {
  @include font-roboto();
}

*::selection {
  background: var(--ion-color-shade, rgba(0, 0, 0, 0.3));
}

// Page Container Structure
// --------------------------------------------------
.ion-page {
  @include position(0, 0, 0, 0);
  display: flex;
  position: absolute;
  flex-direction: column;
  justify-content: space-between;
  contain: layout size style;
  overflow: hidden;
  z-index: $z-index-page-container;
}

ion-route,
ion-route-redirect,
ion-router,
ion-animation-controller,
ion-nav-controller,
ion-menu-controller,
ion-action-sheet-controller,
ion-alert-controller,
ion-loading-controller,
ion-modal-controller,
ion-picker-controller,
ion-popover-controller,
ion-toast-controller,
.ion-page-hidden,
[hidden] {
  /* stylelint-disable-next-line declaration-no-important */
  display: none !important;
}

.ion-page-invisible {
  opacity: 0;
}


// Ionic Safe Margins
// --------------------------------------------------
html.plt-ios.plt-hybrid,
html.plt-ios.plt-pwa {
  --ion-statusbar-padding: 20px;
}

html {
  --ion-safe-area-top: var(--ion-statusbar-padding);
}

// TODO: remove once Safari 11.2 dies
@supports (padding-top: constant(safe-area-inset-top)) {
  html {
    --ion-safe-area-top: constant(safe-area-inset-top);
    --ion-safe-area-bottom: constant(safe-area-inset-bottom);
    --ion-safe-area-left: constant(safe-area-inset-left);
    --ion-safe-area-right: constant(safe-area-inset-right);
  }
}

@supports (padding-top: env(safe-area-inset-top)) {
  html {
    --ion-safe-area-top: env(safe-area-inset-top);
    --ion-safe-area-bottom: env(safe-area-inset-bottom);
    --ion-safe-area-left: env(safe-area-inset-left);
    --ion-safe-area-right: env(safe-area-inset-right);
  }
}

// --------------------------------------------------
// Back button in app toolbar
// --------------------------------------------------

.ion-page.can-go-back {
  app-toolbar {

    ion-menu-toggle {
      display: none !important;
    }

    // Back button
    ion-back-button,
    ion-button.back-button {
      display: inline-block !important;
    }
  }
}

// --------------------------------------------------
// Main Menu
// --------------------------------------------------
.split-pane-md.split-pane-visible > .split-pane-side {
  max-width: 300px !important;
}

ion-menu.menu-side-left {
  .menu-inner {
    .scroll {
      overflow-y: auto !important;

      .scroll-inner {
        min-height: auto !important;
      }
    }
  }
}

// --------------------------------------------------
// Material Forms
// --------------------------------------------------
form.form-container {
  color: rgba(0, 0, 0, 0.87);

  .mat-form-field-disabled,
  .mat-input-element:disabled {
    color: rgba(0, 0, 0, 0.55) !important;
  }

  mat-form-field,
  mat-autocomplete-field,
  app-form-field {
    width: 100%;
  }

  mat-form-field {
    font-size: 16px !important;

    ion-icon[matPrefix],
    mat-icon[matPrefix] {
      margin-left: 5px;
      margin-right: 5px;
    }

    // When field use choice button, reduce the font size, and optimize layout
    button.mat-form-field-button,
    ion-button.mat-form-field-button {
      font-size: 12px !important;
      margin: 0;
      white-space: normal;
    }
  }

  /* -- Computed field -- */

  // Set color on computed field (if enable or disable)
  .computed mat-form-field,
  mat-form-field .computed,
  mat-form-field.computed,
  .computed mat-form-field .mat-input-element:disabled,
  mat-form-field .computed .mat-input-element:disabled,
  mat-form-field.computed .mat-input-element:disabled {
    color: var(--ion-color-primary-tint) !important;
    font-style: italic;
  }

  > ion-grid {
    padding: 0;

    ion-row {
      // No between grid rows
      padding: 0;

      ion-col > ion-label {
        color: var(--ion-color-primary100);
      }

      ion-col > ion-label[text-wrap] {
        word-wrap: normal;
        white-space: normal;
      }
    }
    ion-row > ion-col {

      // No top/bottom padding between grid cell
      padding-bottom: 0;
      padding-top: 0;

    }
  }


}


mat-form-field {
  mat-error {
    text-align: right;
  }

  .mat-paginator-page-size-select {
    font-size: 14px !important;
  }
}

mat-date-time {
  // Need for errors injected using the <ng-content> tag
  mat-error {
    text-align: end;
  }
}

// --- mat-autocomplete and mat-select panel

mat-option {
  .mat-option-text:not(:has(ion-row)) {
    padding: 0 16px;
  }

  ion-row,
  .mat-option-text:has(ion-row) {
    padding: 0;
  }
}

mat-option:not(:last-child) {
  border-bottom: 1px solid $lightBorder;
}

.mat-select-panel {
  width: 250px !important;
}
.mat-autocomplete-panel {
  min-width: 200px !important;
}
.min-width-medium .mat-autocomplete-panel,
.mat-autocomplete-panel.min-width-medium {
  min-width: 250px !important;
}
.min-width-large .mat-autocomplete-panel,
.mat-autocomplete-panel.min-width-large {
  min-width: 350px !important;
}
.mat-select-panel,
.mat-autocomplete-panel {

  ion-row.mat-select-header,
  ion-row.mat-autocomplete-header {
    background-color: var(--ion-color-secondary);
    color: var(--ion-color-secondary-contrast);
    font-size: 12px;
    font-weight: 500;
    height: 20px;
    line-height: 20px;
    border-bottom: 1px solid $lightBorder;

    ion-col {
      white-space: nowrap;
      text-overflow: ellipsis;
    }
  }

  ion-row {
    --ion-grid-column-padding: 0;

    ion-col {
      padding: 0 !important;
      padding-left: 8px !important;
      text-overflow: clip;
      overflow: hidden;
    }
  }

  .mat-option[no-padding],
  mat-option[no-padding] {
    padding: 0 !important;
  }
}

mat-expansion-panel {
  --expansion-panel-padding: 0 24px 16px;
  --expansion-panel-header-padding: 0 24px;

  mat-expansion-panel-header {
    padding: var(--expansion-panel-header-padding, var(--expansion-panel-padding));
  }
  .mat-expansion-panel-body {
    padding: var(--expansion-panel-padding);
  }
}

mat-checkbox {
  .mat-checkbox-checkmark {
    .mat-checkbox-checkmark-path {
      // TODO: change to accent-contrast
      stroke: white !important;
    }
  }
}

// --------------------------------------------------
// Ion-select
// --------------------------------------------------

ion-popover.select-popover {
  .popover-content {
    min-width: calc(min(80%, 200px));
  }
}

@media screen and (min-width: $screen-sm) {
  ion-popover.select-popover {
    .popover-content {
      min-width: 300px;
    }

    ion-radio .radio-icon {
      border: 0 !important;
    }
  }
}

// --------------------------------------------------
// Material Table
// --------------------------------------------------
mat-table {

  .mat-header-cell.disabled {
      color: var(--ion-color-medium, grey);
  }

  .mat-header-cell > ion-label,
  .mat-header-cell button > ion-label {
    margin-top: 0;
    margin-bottom: 0;
  }

  .mat-header-cell > ion-label[text-wrap],
  .mat-header-cell button > ion-label[text-wrap] {
    word-wrap: break-word;
    white-space: normal;
  }

  .mat-header-cell[align-self-center] > ion-label,
  .mat-header-cell[align-self-center] button > ion-label,
  .mat-row[align-self-center] {
    text-align: center;
  }

  .mat-header-row,
  .mat-row {
    border-left: 2px solid transparent;
    max-height: 52px;
    z-index: 999;
    padding: 0 !important;

    mat-cell:last-child,
    mat-footer-cell:last-child,
    mat-header-cell:last-child {
      padding-right: 8px;
    }

    .mat-column-select {
      overflow: initial;
      max-width: 50px;
      padding-left: 14px;
    }

    .mat-column-id {
      max-width: 50px;
      padding-left: 0px;
    }

    .mat-column-comments {
      max-width: 30px;
      padding-left: 0px;
    }

    .mat-column-actions {
      max-width: 40px;
      padding-left: 0px;
    }

    .mat-cell-date-time {
      min-width: 145px;
      max-width: 180px;

      input {
        max-width: 120px;
        overflow: visible !important;
      }
    }

    .mat-cell.computed mat-form-field,
    .mat-cell-computed {
      color: var(--ion-color-primary-tint);
      font-style: italic;
    }
  }

  .mat-row {
    .mat-form-field-disabled,
    .mat-input-element:disabled,
    .mat-form-field-disabled * {
      pointer-events: inherit;
      color: inherit;

      .mat-form-field-underline {
        background: none !important;
        display: none;
      }

      .mat-select-arrow-wrapper .mat-select-arrow {
        visibility: hidden;
        width: 0;
        border: 0;
      }

      .mat-form-field-label {
        visibility: hidden;
      }
    }

    .mat-form-field-underline {
      bottom: 9px !important;
    }

    .mat-form-field {
      width: 100%;

      .mat-form-field-label {
        width: 100%;
      }

      .mat-form-field-wrapper {
        padding-bottom: 10px;
      }

      .mat-form-field-infix {
        width: 100%;
        white-space: nowrap;
        overflow: inherit;

        .mat-input-element,
        input {
          //margin-left: 5px;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
        }

        input[type=number]::-webkit-outer-spin-button,
        input[type=number]::-webkit-inner-spin-button {
          -webkit-appearance: none;
          margin: 0;
        }

        input[type=number] {
          //text-align: right;
          -moz-appearance: textfield;
        }
      }
    }

    .mat-form-field-subscript-wrapper {
      margin-top: -0.1rem !important;
    }

    .mat-boolean-field-radio.mat-form-field-appearance-legacy .mat-form-field-infix,
    .mat-boolean-field-radio .mat-form-field-infix {
      // Reduce top border (because of radio height)
      border-top: 0.5em solid transparent !important;
    }

    .mat-boolean-field-checkbox.mat-form-field-appearance-legacy .mat-form-field-infix,
    .mat-boolean-field-checkbox .mat-form-field-infix {
      // Increase top border (because of checkbox height)
      padding-top: 0.4em;
    }

    .mat-cell {
      // Need by mat-boolean-field, for checkbox ripple effect
      //overflow: visible;
    }
  }

  /* Special case if cell need left padding */
  .mat-row.left-padding {
    .mat-form-field-label {
      width: 100%;
      padding-left: 5px;
    }

    .mat-form-field-infix {
      padding-left: 5px;
    }
  }

  /* Special case to have small row */
  .mat-row-small {
    min-height: inherit;
    max-height: 33px !important;
  }
  .mat-row.mat-small .mat-cell,
  .mat-row .mat-cell.mat-small{
    line-height: 15px;
    font-size: 12px;
  }

  mat-cell .avatar {
    color: #d9d9d9;
    background-color: #f8f8f8;
    border: solid 1px #d9d9d9;
    overflow: hidden !important;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: inline-block;
  }

  .mat-row.mat-row-disabled {
    cursor: pointer;

    * {
      pointer-events: inherit;
    }
  }

  .mat-row.mat-row-disabled:hover {
    background-color: var(--ion-color-secondary100);

    .mat-cell{
      color: var(--ion-color-secondary100-contrast);
    }
  }

  .mat-row.mat-row-selected {
    background-color: var(--ion-color-secondary100);

    .mat-cell{
      color: var(--ion-color-secondary100-contrast);
    }
  }

  .mat-row.mat-row-dirty {
    border-left: 2px solid var(--ion-color-primary-tint, --ion-color-primary);
  }

  .mat-row.mat-row-error {
    margin-top: -1px;
    border: 2px dashed var(--ion-color-danger);
  }
}


@media screen and (max-width: $screen-sm-max) {
  mat-table {

    mat-cell:first-child,
    mat-footer-cell:first-child,
    mat-header-cell:first-child {
      padding-right: 8px !important;
    }

    // Reuse the first column, to inject a left padding
    .mat-column-select {
      max-width: 8px !important;
      overflow: hidden;

      * {
        display: none !important;
        visibility: hidden !important;
      }
    }

    .mat-column-comments {
      display: none !important;
      visibility: hidden !important;
    }
  }
}

// Other material component

.toolbar-spacer {
  flex: 1 1 auto;
}

ion-toolbar[translucent] {
  --background: transparent !important;
}

// --- mat-stepper component
mat-horizontal-stepper {
  .mat-horizontal-stepper-header-container {
    padding: 0;
  }

  .mat-horizontal-content-container {
    padding: 0;
  }
}


// Extra small device: Phones (<767px)
@media screen and (max-width: $screen-xs-max) {
  mat-horizontal-stepper {
    .mat-horizontal-stepper-header-container {
      .mat-horizontal-stepper-header {
        padding-left: 5px;
      }

      .mat-stepper-horizontal-line {
        display: none;
      }
    }

    .mat-horizontal-content-container {
      padding: 0;
    }
  }
}

mat-button-toggle.mat-button-toggle-checked,
mat-button-toggle.mat-button-toggle-checked.mat-button-toggle-disabled {
  background-color: var(--ion-color-light);
  color: white;
}

// --------------------------------------------------
// Material menu
// --------------------------------------------------

// Small menu (e.g. for actions on a table row)
.mat-menu-panel.mat-menu-small {

  .mat-menu-content {
    padding: 0;

    .mat-menu-item {
      padding: 0 8px;
      height: 35px;
      line-height: 35px;
    }
  }
}

// --------------------------------------------------
// Alert
// --------------------------------------------------

ion-alert button.alert-button {
  cursor: pointer;
}

// --------------------------------------------------
// Date and time picker
// --------------------------------------------------

mat-calendar {
  .mat-calendar-header {
    background-color: var(--ion-color-secondary) !important;
    color: var(--ion-color-secondary-contrast) !important;

    button {
      color: var(--ion-color-secondary-contrast) !important;
    }
  }

  .mat-calendar-body-selected {
    background-color: var(--ion-color-accent) !important;
    color: var(--ion-color-accent-contrast) !important;
  }

  .mat-calendar-arrow {
    border-top-color: var(--ion-color-secondary-contrast) !important;
  }
}

ngx-material-timepicker {
  --clock-hand-color: var(--ion-color-accent) !important;
  --clock-face-time-active-color: var(--ion-color-accent-contrast) !important;

  .timepicker {
    header {
      --dial-background-color: var(--ion-color-secondary) !important;
      color: var(--ion-color-secondary-contrast) !important;
    }
  }
}

// --------------------------------------------------
// Pages
// --------------------------------------------------
ion-item {
  ion-label.error {
    line-height: 16px;
    line-break: normal;
    overflow: visible;
    white-space: normal;
  }
}

// --------------------------------------------------
// Modal
// --------------------------------------------------

.app-sub-batches-modal {
  .modal-wrapper {
    min-width: calc(100% - 100px);
    min-height: calc(100% - 50px);
  }
}

// --------------------------------------------------
// Inject theme colors (as CSS variables)
// --------------------------------------------------
:root {

  @include css-variables-to-root();
}
