// http://ionicframework.com/docs/theming/
// Include all of Ionic
// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.
body,
html {
  padding: 0;
  margin: 0;
}

body {
  user-select: text !important;
}

router-outlet+* {
  width: 100%;
}

body {
  user-select: text !important;
}

.bg-image-cover {
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

ion-menu .scroll-content {
  overflow: hidden;
}

ion-content .fixed-content,
ion-content .scroll-content {
  margin-top: 56px;
}

p {
  color: #333;
}

[hidden] {
  display: none !important;
}

// --------------------------------------------------
// Responsive: Utility classes
// --------------------------------------------------
$screen-xxs-max: 400px;
$screen-xs: 401px;
$screen-xs-max: 767px;
$screen-sm: 768px;
$screen-sm-max: 991px;
$screen-md: 992px;
$screen-md-max: 1199px;
$screen-lg: 1200px;
//$grid-breakpoints: (
//  xs: 0
//)
// IE10 on Windows Phone 8
// IE10 on WP8 doesn't report CSS pixels, but actual device pixels. In
// other words, say on a Lumia, you'll get 768px as the device width,
// meaning users will see the tablet styles and not phone styles.
//
// Alternatively you can override this with JS (see source below), but
// we won't be doing that here given our limited scope.
//
// Source: http://timkadlec.com/2013/01/windows-phone-8-and-device-width/
//
// >>Autre doc http://getbootstrap.com/css/#responsive-utilities-classes
//
@media screen and (max-width: $screen-xxs-max) {
  @-ms-viewport {
    width: 320px;
  }
}

// Extra small device: Phones (<767px)
@media screen and (max-width: $screen-xs-max) {
  .hidden-xs {
    display: none !important;
    visibility: hidden !important;
  }
  .padding-top-xs {
    padding-top: 10px;
  }
}

@media screen and (min-width: $screen-sm) {
  .hidden-xs {
    display: inherit;
    visibility: visible;
  }
}

@media screen and (max-width: $screen-xs-max) {
  .visible-xs {
    display: inherit !important;
    visibility: visible !important;
  }
}

@media screen and (min-width: $screen-sm) {
  .visible-xs {
    display: none !important;
    visibility: hidden !important;
  }
}

@media screen and (max-width: $screen-xs-max) {
  .padding-xs {
    padding: 15px !important;
  }
}

@media screen and (min-width: $screen-sm) {
  .padding-xs {
    padding: inherit;
  }
}

@media screen and (max-width: $screen-xs-max) {
  .no-padding-xs .scroll-content,
  .no-padding-xs {
    padding: 0px !important;
  }
}

@media screen and (min-width: $screen-sm) {
  .no-padding-xs .scroll-content,
  .no-padding-xs {
    padding: inherit;
  }
}

@media screen and (max-width: $screen-xs-max) {
  .no-margin-xs {
    margin: 0px !important;
  }
}

@media screen and (min-width: $screen-sm) {
  .no-margin-xs {
    margin: inherit;
  }
}

// Small devices: Tablets (≥768px)
@media screen and (max-width: $screen-sm-max) and (min-width: $screen-sm) {
  .hidden-sm,
  .row-header.hidden-sm {
    display: none !important;
    visibility: hidden !important;
  }
  .badge {
    text-overflow: ellipsis !important;
    white-space: nowrap;
    overflow: hidden !important;
    max-width: 400px !important;
    display: block !important;
  }
  .badge:empty {
    display: none !important;
  }
}

@media screen and (min-width: $screen-md) {
  .hidden-sm {
    display: inherit;
    visibility: visible;
  }
  .row.hidden-sm {
    display: flex !important;
  }
  .button.hidden-sm {
    display: flex;
  }
  .pull-right,
  .pull-left {
    .button.hidden-sm {
      display: inline-block;
    }
  }
}

@media screen and (max-width: $screen-xs-max) {
  .hidden-sm {
    display: inherit;
    visibility: visible;
  }
}

@media screen and (max-width: $screen-sm-max) {
  .visible-sm {
    display: inherit !important;
    visibility: visible !important;
  }
  .button.visible-sm {
    display: block !important;
  }
}

@media screen and (min-width: $screen-md) {
  .visible-sm {
    display: none;
    visibility: hidden;
  }
}

@media screen and (max-width: $screen-xs-max) {
  .visible-sm {
    display: none;
    visibility: hidden;
  }
}

@media screen and (max-width: $screen-sm-max) {
  body {
    cursor: url('http://ionicframework.com/img/finger.png'), auto;
  }
}

@media screen and (min-width: $screen-md) {
  body {
    cursor: inherit;
  }
}

// Medium devices: Desktops (≥992px)
@media screen and (min-width: $screen-md) and (max-width: $screen-md-max) {
  .hidden-md {
    display: none !important;
    visibility: hidden !important;
  }
  .badge {
    text-overflow: ellipsis !important;
    white-space: nowrap;
    overflow: hidden !important;
    max-width: 400px !important;
    display: block !important;
  }
  .badge:empty {
    display: none !important;
  }
}

@media screen and (min-width: $screen-lg) {
  .hidden-md {
    display: inherit;
    visibility: visible;
  }
}

@media screen and (max-width: $screen-sm-max) {
  .hidden-md {
    display: inherit;
    visibility: visible;
  }
}

@media screen and (min-width: $screen-md) and (max-width: $screen-md-max) {
  .visible-md {
    display: inherit !important;
    visibility: visible !important;
  }
}

@media screen and (min-width: $screen-lg) {
  .visible-md {
    display: none;
    visibility: hidden;
  }
}

@media screen and (max-width: $screen-sm-max) {
  .visible-md {
    display: none;
    visibility: hidden;
  }
}

// Large devices: Desktops (≥1200px)
@media screen and (min-width: $screen-lg) {
  .hidden-lg {
    display: none !important;
    visibility: hidden !important;
  }
  .visible-lg {
    display: inherit !important;
    visibility: visible !important;
  }
  .badge {
    text-overflow: ellipsis !important;
    white-space: nowrap;
    overflow: hidden !important;
    max-width: 450px !important;
    display: block !important;
  }
  .badge:empty {
    display: none !important;
  }
}

@media screen and (max-width: $screen-md-max) {
  .hidden-lg {
    display: inherit;
    visibility: visible;
  }
}

@media screen and (max-width: $screen-md-max) {
  .visible-lg {
    display: none;
    visibility: hidden;
  }
}

@media screen and (max-width: $screen-sm) {
  .no-padding-xs {
    padding: inherit;
  }
}

@media screen and (max-width: $screen-xs-max) {
  .no-margin-xs {
    margin: 0px !important;
  }
}

@media screen and (min-width: $screen-md) {
  html,
  body,
  .scroll,
  .disable-user-behavior {
    -webkit-user-selectuser-select: auto !important;
    -moz-user-select: auto !important;
    -ms-user-select: auto !important;
    user-select: auto !important;
  }
}

// --------------------------------------------------
// Global style responsive
// --------------------------------------------------
@media (min-width: $screen-sm) {
  .header-main {
    margin-left: 270px;
    position: fixed;
  }
  .bar-button-menutoggle-md {
    display: none !important
  }
  ion-modal .header-main {
    margin-left: 0 !important;
  }
}

// --------------------------------------------------
// Material Forms
// --------------------------------------------------
form {
  color: rgba(0, 0, 0, 0.87);
  .mat-form-field-disabled,
  .mat-input-element:disabled {
    color: rgba(0, 0, 0, 0.55) !important;
  }
}

mat-form-field {
  mat-error {
    text-align: right;
  }
}

form mat-form-field {
  font-size: 16px !important;
}

mat-form-field .mat-paginator-page-size-select {
  font-size: 14px !important;
}

// --------------------------------------------------
// Material Table
// --------------------------------------------------
mat-table {
  .mat-form-field-disabled,
  .mat-input-element:disabled,
  .mat-form-field-disabled * {
    pointer-events: inherit;
  }
  .mat-row-disabled {
    cursor: pointer !important;
  }
  .mat-row-disabled:hover {
    //background-color: color($colors, light100);
    background-color: whitesmoke;
  }
  .mat-row-error {
    //border-bottom-color: color($colors, danger);
    border-bottom-width: 2px; //background-color: color($colors, light100);
  }
  mat-cell .avatar {
    color: #d9d9d9;
    background-color: #f8f8f8;
    border: solid 1px #d9d9d9;
    overflow: hidden !important;
    border-radius: 50%;
    display: inline-block;
  }
}

// --- mat-stepper component
mat-horizontal-stepper {
  .mat-horizontal-stepper-header-container {
    padding: 0;
  }
  .mat-horizontal-content-container {
    padding: 0;
  }
}

// Extra small device: Phones (<767px)
@media screen and (max-width: $screen-xs-max) {
  mat-horizontal-stepper {
    .mat-horizontal-stepper-header-container {
      .mat-horizontal-stepper-header {
        padding-left: 5px;
      }
      .mat-stepper-horizontal-line {
        display: none;
      }
    }
    .mat-horizontal-content-container {
      padding: 0;
    }
  }
}

@media screen and (min-width: $screen-md) and (max-width: $screen-md-max) {
  ion-modal .modal-wrapper {
    left: calc(50% - (768px/2));
    top: calc(50% - (600px/2));
    position: absolute;
    width: 768px;
    height: 600px;
  }
}

@media screen and (min-width: $screen-lg) {
  ion-modal .modal-wrapper {
    left: calc(50% - (1000px/2));
    top: calc(50% - (600px/2));
    position: absolute;
    width: 1000px;
    height: 600px;
  }
}

mat-option:has(ion-row) {
  padding: 0;
}

mat-option ion-row {
  padding: 0;
  border-bottom: 1px solid rgba(0, 0, 0, 0.12);
  ion-col.col {
    padding: 0;
    padding-left: 16px;
  }
  ion-col.col:first-child {
    padding: 0;
  }
}

mat-button-toggle.mat-button-toggle-checked,
mat-button-toggle.mat-button-toggle-checked.mat-button-toggle-disabled {
  //background-color: color($colors, light);
  color: white;
}
