image: trion/ng-cli

stages:
    - build
    - test
    - docs
    - prepare
    - release
    - deploy

.build:
  stage: build
  tags:
    - sih_public_runner
  script:
    - echo "Test compilation in progress"
    - npm install
    - npm run build
  environment:
    name: test

build_dev:
  extends: .build
  only:
    - develop
    - develop-imagine
    - feature/gitlab_ci
  except:
    - schedules

schedule-build:
  extends: .build
  only:
    - schedules

publish_registry:
    stage: deploy
    tags:
        - sih_public_runner
    script:
        - echo "Deploy artefact in progress"
        - PROJECT_DIR=`pwd`
        - ls
        - ls ${CI_PROJECT_DIR}/dist
        - ls ${PROJECT_DIR}/www
        - cp ${CI_PROJECT_DIR}/package.json ${CI_PROJECT_DIR}/www
        - cat ${CI_PROJECT_DIR}/www/package.json
        - |
          {
            echo "registry=https://gitlab.ifremer.fr/api/v4/projects/${CI_PROJECT_ID}/packages/npm/"
            echo "//gitlab.ifremer.fr/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}"
          } | tee --append .npmrc
        - npm publish ${CI_PROJECT_DIR}/www
    only:
        - develop
        - develop-imagine
        - feature/gitlab_ci
    when: manual


sonarqube:
    stage: test
    tags:
        - sih_public_runner
    variables:
      SONAR_TOKEN: "e6f816eee72d3d5c03319ec74b468157b9164d12"
      SONAR_HOST_URL: "http://visi-common-sonar:9000"
    image:
      name: sonarsource/sonar-scanner-cli:latest
      entrypoint: [""]
    script:
      - echo "Sonarqube analysis in progress"
      - sonar-scanner
        -Dsonar.projectKey=imagine-app
        -Dsonar.host.url=$SONAR_HOST_URL
        -Dsonar.login=$SONAR_TOKEN
        -Dsonar.sourceEncoding=UTF-8
        -Dsonar.java.binaries=.
        -Dsonar.java.libraries=.
    only:
        - develop
    when: manual

pages:
    stage: docs
    tags:
        - sih_public_runner
    image: python:3.7-alpine
    before_script:
        - apk --update --upgrade add gcc musl-dev jpeg-dev zlib-dev libffi-dev cairo-dev pango-dev gdk-pixbuf-dev
        - pip install --upgrade pip
        - pip install --upgrade mkdocs
        - pip install --upgrade mkdocs-pdf-export-plugin==0.5.5
    script:
        - mkdocs -v build
        - mv site public
    artifacts:
        paths:
            - public
    only:
        - develop
    when: manual

package:
    stage: prepare
    tags:
        - sih_public_runner
    before_script:
        - git checkout -B "$CI_BUILD_REF_NAME"
        - git config --global user.email "lbruvryl@ifremer.fr"
        - git config --global user.name "Leo BRUVRY-LAGADEC"
        - echo "TAG=$RELEASE_VERSION" >> variables.env
    script:
        - echo "Release in progress"
        - mvn -P prod release:clean -Dslf4jJclScope=provided
        - mvn -P prod -s ./settings.xml release:prepare --batch-mode -Dtag=emso-charts-$RELEASE_VERSION -DreleaseVersion=$RELEASE_VERSION -DdevelopmentVersion=$NEW_DEV_VERSION -DscmCommentPrefix="[ci skip] to "
        - mvn -P prod -s ./settings.xml release:perform -Dslf4jJclScope=provided -X -DscmCommentPrefix="[ci skip] to "
    artifacts:
        paths:
            - web-services/target/*.war
        reports:
            dotenv: variables.env
    only:
        - develop
    allow_failure: false
    when: manual

release:
    stage: release
    tags:
        - sih_public_runner
    image: registry.gitlab.com/gitlab-org/release-cli:latest
    needs:
        - job: package
          artifacts: true
    script:
        - echo "running release for emso-charts-$TAG"
    release:
        name: "Release emso-charts-$TAG"
        description: "Created using the release-cli $EXTRA_DESCRIPTION"
        tag_name: "emso-charts-$TAG"
        ref: "$CI_COMMIT_SHA"
    only:
        - develop-ifremer

deploy:
    stage: deploy
    tags:
        - sih_public_runner
    script:
        - echo "Deploy artefact in progress"
        - echo "${CI_PROJECT_ROOT_NAMESPACE}"
        - cp ${CI_PROJECT_DIR}/package.json ${CI_PROJECT_DIR}/www
        - '{
          echo "registry=https://gitlab.ifremer.fr/api/v4/projects/${CI_PROJECT_ID}/packages/npm/"
          echo "//gitlab.ifremer.fr/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}"
          } | tee --append .npmrc'
        - npm publish ${CI_PROJECT_DIR}/www
    only:
        - develop
    when: manual
