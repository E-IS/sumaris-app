image: trion/ng-cli

stages:
  - build
  - test
  - docs
  - prepare
  - release
  - deploy

.build:
  stage: build
  tags:
    - sih_public_runner
  script:
    - echo "installation and build in progress"
    - npm install
    - npm run build.${BUILD_ENVIRONMENT}

build-dev:
  extends: .build
  only:
    - develop
    - develop-imagine
    - feature/ci_build
  except:
    - schedules
  variables:
    BUILD_ENVIRONMENT: dev

schedule-build:
  extends: .build
  variables:
    BUILD_ENVIRONMENT: dev
  only:
    - schedules

build_dev_and_zip:
  extends: .build
  after_script:
    - echo "Creating web artifact in progress"
    - PROJECT_DIR=`pwd`
    - mkdir -p "${PROJECT_DIR}/dist"
    - ZIP_FILE=${PROJECT_DIR}/dist/${CI_PROJECT_NAME}.zip
    - cd $PROJECT_DIR/www
    - zip -q -r $ZIP_FILE .
  variables:
    BUILD_ENVIRONMENT: dev
  artifacts:
    paths:
      - dist
  only:
    - develop
    - develop-imagine
    - feature/ci_build
  when: manual

deploy_project_registry:
    stage: deploy
    tags:
        - sih_public_runner
    before_script:
        - SNAPSHOT_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)
    script:
        - echo "Deploy Snapshot in progress"
        - echo $SNAPSHOT_VERSION
        - mvn -s ./ci_settings.xml deploy:deploy-file -DgroupId=fr.ifremer -DartifactId=imagine-pod -Dversion=$SNAPSHOT_VERSION -Dfile=sumaris-server/target/sumaris-server-$SNAPSHOT_VERSION.war -DrepositoryId=job-maven -Durl=https://gitlab.ifremer.fr/api/v4/projects/1272/packages/maven
    only:
        - develop
        - feature/imagine
        - feature-oracle-adagio
    when: manual


sonarqube:
    stage: test
    tags:
        - sih_public_runner
    variables:
      SONAR_TOKEN: "e6f816eee72d3d5c03319ec74b468157b9164d12"
      SONAR_HOST_URL: "http://visi-common-sonar:9000"
    image:
      name: sonarsource/sonar-scanner-cli:latest
      entrypoint: [""]
    script:
      - echo "Sonarqube analysis in progress"
      - sonar-scanner
        -Dsonar.projectKey=imagine-app
        -Dsonar.host.url=$SONAR_HOST_URL
        -Dsonar.login=$SONAR_TOKEN
        -Dsonar.sourceEncoding=UTF-8
        -Dsonar.java.binaries=.
        -Dsonar.java.libraries=.
    only:
        - develop
        - develop-ifremer
    when: manual


pages:
    stage: docs
    tags:
        - sih_public_runner
    image: python:3.7-alpine
    before_script:
        - apk --update --upgrade add gcc musl-dev jpeg-dev zlib-dev libffi-dev cairo-dev pango-dev gdk-pixbuf-dev
        - pip install --upgrade pip
        - pip install --upgrade mkdocs
        - pip install --upgrade mkdocs-pdf-export-plugin==0.5.5
    script:
        - mkdocs -v build
        - mv site public
    artifacts:
        paths:
            - public
    only:
        - develop
        - develop-ifremer
    when: manual

package:
    stage: prepare
    tags:
        - sih_public_runner
    before_script:
        - git checkout -B "$CI_BUILD_REF_NAME"
        - git config --global user.email "lbruvryl@ifremer.fr"
        - git config --global user.name "Leo BRUVRY-LAGADEC"
        - echo "TAG=$RELEASE_VERSION" >> variables.env
    script:
        - echo "Release in progress"
        - mvn -P prod release:clean -Dslf4jJclScope=provided
        - mvn -P prod -s ./settings.xml release:prepare --batch-mode -Dtag=emso-charts-$RELEASE_VERSION -DreleaseVersion=$RELEASE_VERSION -DdevelopmentVersion=$NEW_DEV_VERSION -DscmCommentPrefix="[ci skip] to "
        - mvn -P prod -s ./settings.xml release:perform -Dslf4jJclScope=provided -X -DscmCommentPrefix="[ci skip] to "
    artifacts:
        paths:
            - web-services/target/*.war
        reports:
            dotenv: variables.env
    only:
        - develop-ifremer
    allow_failure: false
    when: manual

release:
    stage: release
    tags:
        - sih_public_runner
    image: registry.gitlab.com/gitlab-org/release-cli:latest
    needs:
        - job: package
          artifacts: true
    script:
        - echo "running release for emso-charts-$TAG"
    release:
        name: "Release emso-charts-$TAG"
        description: "Created using the release-cli $EXTRA_DESCRIPTION"
        tag_name: "emso-charts-$TAG"
        ref: "$CI_COMMIT_SHA"
    only:
        - develop-ifremer
deploy:
    stage: deploy
    tags:
        - sih_public_runner
    script:
        - echo "Deploy in progress"
        - mvn -s ./settings.xml deploy:deploy-file -DgroupId=fr.ifremer -DartifactId=emso-charts -Dversion=$TAG -Dfile=web-services/target/ROOT.war -DrepositoryId=gitlab-maven -Durl=https://gitlab.ifremer.fr/api/v4/projects/1226/packages/maven
    only:
        - develop-ifremer
    when: manual
